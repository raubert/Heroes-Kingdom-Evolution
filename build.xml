<project name="Heroes Kingdom Evolution" default="all" basedir=".">

	<property name="version" value="2.3" />

	<property environment="env" />

	<property name="src" location="src" />
	<property name="src.js" location="${src}/js" />
	<property name="src.css" location="${src}/css" />
	<property name="src.img" location="${src}/images" />
	<property name="src.modules" location="${src}/modules" />
	<property name="src.chrome" location="${src}/chrome" />
	<property name="src.firefox" location="${src}/firefox" />
	<property name="src.userscript" location="${src}/userscript" />

	<property name="build" location="build" />
	<property name="build.extra" location="${build}/extra" />
	<property name="build.lang" value="en,fr" />
	<property name="build.jquery.js" value="jquery.js" />
	<property name="build.jquery.ui.js" value="jquery.ui.js" />
	<property name="build.jquery.ui.css" value="jquery.ui.css" />
	<property name="build.mmhk.inject" value="mmhk.ext.js" />
	<property name="build.mmhk.content" value="mmhk.ext.content.js" />
	<property name="build.mmhk.background" value="mmhk.ext.background.js" />
	<property name="build.mmhk.css" value="mmhk.ext.css" />

	<property name="redist" location="redist" />
	<property name="host" value="http://amroth.free.fr/MMHK/extension" />

	<property name="chrome-id" value="gloedkpafdknpopjjdjdhdcbadidmkio" />
	<!-- change this path to fit your environment -->
	<condition property="chrome" value="${env.LOCALAPPDATA}\Google\Chrome\Application\chrome.exe">
		<os family="windows" />
	</condition>
	<condition property="chrome" value="chromium-browser">
		<os family="unix" />
	</condition>
	<property name="chrome-updates" location="${redist}/updates.xml" />
	<property name="firefox-updates" location="${redist}/updates.rdf" />

	<!-- ant-contrib required -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" />

	<!-- merges the specified target as a concatenation of the given list of files -->
	<macrodef name="merge-and-prepare">
		<attribute name="target" />
		<attribute name="type" />
		<element name="files" implicit="true" />
		<sequential>
			<concat destfile="@{target}">
				<files />
			</concat>
			<prepare target="@{target}" type="@{type}" />
		</sequential>
	</macrodef>

	<!-- prepares the specified target for production -->
	<macrodef name="prepare">
		<attribute name="target" />
		<attribute name="type" />
		<sequential>
			<replace token="@VERSION" value="${version}" file="@{target}" />
			<tstamp>
				<format property="now" pattern="d-MMMM-yyyy hh:mm aa z" locale="en,US" />
			</tstamp>
			<replace token="@DATE" value="Date: ${now}" file="@{target}" />
		</sequential>
	</macrodef>

	<macrodef name="append">
		<attribute name="file" />
		<attribute name="to" />
		<sequential>
			<if>
				<available file="@{file}" />
				<then>
					<echo message="@{file} >> @{to}" />
					<concat destfile="@{to}" append="yes">
						<filelist dir=".">
							<file name="@{file}" />
						</filelist>
					</concat>
				</then>
			</if>
		</sequential>
	</macrodef>

	<target name="locale">
		<append file="${base}/messages_${lang}.js" to="${target}" />
	</target>

	<target name="module-inject">
		<basename property="base" file="${dir}" />
		<foreach list="${build.lang}" target="locale" param="lang">
			<param name="target" value="${target}" />
			<param name="base" value="${dir}" />
		</foreach>
		<append file="${dir}/${base}.js" to="${target}" />
	</target>

	<target name="module-script">
		<append file="${dir}/${type}.js" to="${target}" />
	</target>

	<target name="module-css">
		<basename property="base" file="${dir}" />
		<append file="${dir}/${base}.css" to="${target}" />
	</target>

	<target name="all">
		<delete dir="${redist}" />

		<antcall target="clean" />
		<antcall target="chrome-redist" />

		<antcall target="clean" />
		<antcall target="firefox-redist" />
	</target>

	<target name="clean">
		<delete dir="${build}" />
	</target>

	<target name="chrome-redist" depends="chrome">
		<!-- package extension -->
		<exec executable="${chrome}">
			<arg value="--pack-extension=${build}" />
			<arg value="--pack-extension-key=${src.chrome}/HeroesKingdomEvolution.pem" />
			<arg value="--no-message-box" />
			<arg value="--no-first-run" />
		</exec>

		<delete file="${redist}/HeroesKingdomEvolution.crx" />
		<move file="build.crx" tofile="${redist}/HeroesKingdomEvolution.crx" />

		<delete file="${chrome-updates}" />
		<copy file="${src.chrome}/updates.xml" tofile="${chrome-updates}" />
		<replaceregexp match="@ID" replace="${chrome-id}" flags="g" file="${chrome-updates}" />
		<replaceregexp match="@VERSION" replace="${version}" flags="g" file="${chrome-updates}" />
		<replaceregexp match="@HOST" replace="${host}" flags="g" file="${chrome-updates}" />
	</target>

	<target name="chrome" depends="jQuery,jQuery-UI,mmhk-injected,mmhk-content-chrome,mmhk-background-chrome,mmhk-css,mmhk-chrome-options,mmhk-extra-files">
		<!-- copy chrome files -->
		<copy todir="${build}">
			<fileset dir="${src.chrome}">
				<!-- we don't give the key :P -->
				<exclude name="*.pem" />
				<!-- updates file is not needed -->
				<exclude name="updates.xml" />
				<!-- these files have their own target -->
				<exclude name="options.js" />
				<exclude name="options.css" />
				<!-- impl are included in scripts -->
				<exclude name="impl/**" />
			</fileset>
		</copy>

		<!-- copy images -->
		<copy todir="${build}/images">
			<fileset dir="${src.img}" includes="*.*" />
		</copy>

		<!-- move extra files into the right location -->
		<move todir="${build}" includeEmptyDirs="no">
			<fileset dir="${build.extra}" includes="**/*" />
		</move>
		<delete dir="${build.extra}" />

		<!-- fix images path in CSS -->
		<property name="images.path" value="chrome-extension://${chrome-id}" />
		<replace token="@EXTENSION_PATH" value="${images.path}" file="${build}/${build.jquery.ui.css}" />
		<replace token="@EXTENSION_PATH" value="${images.path}" file="${build}/${build.mmhk.css}" />

		<!-- update manifest -->
		<replaceregexp match="@VERSION" replace="${version}" flags="g" file="${build}/manifest.json" />
		<replaceregexp match="@HOST" replace="${host}" flags="g" file="${build}/manifest.json" />
	</target>

	<target name="firefox-redist" depends="firefox">
		<zip basedir="${build}" destfile="${redist}/HeroesKingdomEvolution.xpi" />

		<checksum file="${redist}/HeroesKingdomEvolution.xpi" algorithm="SHA" property="xpi-hash" />

		<delete file="${firefox-updates}" />
		<copy file="${src.firefox}/updates.rdf" tofile="${firefox-updates}" />
		<replaceregexp match="@VERSION" replace="${version}" flags="g" file="${firefox-updates}" />
		<replaceregexp match="@HOST" replace="${host}" flags="g" file="${firefox-updates}" />
		<replaceregexp match="@HASH" replace="sha1:${xpi-hash}" file="${firefox-updates}" />
	</target>

	<target name="firefox" depends="jQuery,jQuery-UI,mmhk-injected,mmhk-content-firefox,mmhk-background-firefox,mmhk-css,mmhk-extra-files">
		<!-- copy chrome files -->
		<copy todir="${build}">
			<fileset dir="${src.firefox}">
				<!-- impl are included in scripts -->
				<exclude name="impl/**" />
				<!-- updates file is not needed -->
				<exclude name="updates.rdf" />
			</fileset>
		</copy>

		<!-- background and content are one single file -->
		<property name="background" location="${build}/chrome/content/background.js" />
		<loadfile property="content.ff" srcFile="${build}/${build.mmhk.content}" />
		<replaceregexp match="@CONTENT" replace="${content.ff}" file="${background}" />
		<delete file="${build}/${build.mmhk.content}" />
		<loadfile property="background.ff" srcFile="${build}/${build.mmhk.background}" />
		<replaceregexp match="@BACKGROUND" replace="${background.ff}" file="${background}" />
		<delete file="${build}/${build.mmhk.background}" />

		<!-- fix images path in CSS -->
		<property name="images.path" value="chrome://mmhk-ext/content" />
		<replace token="@EXTENSION_PATH" value="${images.path}" file="${build}/${build.mmhk.css}" />

		<!-- will be injected -->
		<move todir="${build}/chrome/browser">
			<fileset dir="${build}">
				<include name="${build.mmhk.inject}" />
				<include name="${build.mmhk.css}" />
			</fileset>
		</move>

		<!-- copy images -->
		<mkdir dir="${build}/images" />
		<copy todir="${build}/images">
			<fileset dir="${src.img}" includes="*.*" />
		</copy>
		<move file="${build}/images" todir="${build}/chrome/browser" />
		
		<!-- move extra files into the right location -->
		<move todir="${build}/chrome/browser" includeEmptyDirs="no">
			<fileset dir="${build.extra}" includes="**/*" />
		</move>
		<delete dir="${build.extra}" />

		<!-- we don't need those -->
		<delete file="${build}/${build.jquery.js}" />
		<delete file="${build}/${build.jquery.ui.js}" />
		<delete file="${build}/${build.jquery.ui.css}" />

		<!-- update manifest -->
		<replaceregexp match="@VERSION" replace="${version}" flags="g" file="${build}/install.rdf" />
		<replaceregexp match="@HOST" replace="${host}" flags="g" file="${build}/install.rdf" />
	</target>

	<!-- jQuery library and plugins -->
	<target name="jQuery">
		<mkdir dir="${build}" />

		<merge-and-prepare target="${build}/${build.jquery.js}" type="js">
			<filelist dir="${src.js}">
				<file name="jquery-1.4.3.js" />
				<file name="jquery.ba-throttle-debounce.js" />
				<file name="jquery.cluetip.js" />
				<file name="jquery.hoverIntent.js" />
				<file name="jtemplates.0.7.8.js" />
			</filelist>
		</merge-and-prepare>
	</target>

	<!-- jQuery UI library, plugins and style -->
	<target name="jQuery-UI">
		<mkdir dir="${build}" />

		<merge-and-prepare target="${build}/${build.jquery.ui.js}" type="js">
			<filelist dir="${src.js}">
				<file name="jquery.ui.core.js" />
				<file name="jquery.ui.widget.js" />
				<file name="jquery.ui.mouse.js" />
				<file name="jquery.ui.position.js" />
				<file name="jquery.ui.draggable.js" />
				<file name="jquery.ui.droppable.js" />
				<file name="jquery.ui.autocomplete.js" />
				<file name="jquery.ui.button.js" />
				<file name="jquery.ui.dialog.js" />
				<file name="jquery.ui.tabs.js" />
				<file name="jquery.ui.progressbar.js" />
			</filelist>
		</merge-and-prepare>

		<merge-and-prepare target="${build}/${build.jquery.ui.css}" type="css">
			<filelist dir="${src.css}">
				<file name="jquery.ui.core.css" />
				<file name="jquery.ui.autocomplete.css" />
				<file name="jquery.ui.button.css" />
				<file name="jquery.ui.dialog.css" />
				<file name="jquery.ui.tabs.css" />
				<file name="jquery.ui.progressbar.css" />
				<file name="jquery.ui.theme.css" />
			</filelist>
		</merge-and-prepare>

		<copy todir="${build}/images">
			<fileset dir="${src.img}/ui" />
		</copy>
	</target>

	<!-- MMHK injected scripts -->
	<target name="mmhk-injected" depends="jQuery,jQuery-UI">
		<mkdir dir="${build}" />

		<!-- start with opening, libs and base scripts -->
		<concat destfile="${build}/${build.mmhk.inject}">
			<filelist dir="${src.js}">
				<!-- intro -->
				<file name="mmhk.ext.inject.intro.js" />
			</filelist>
			<filelist dir="${build}">
				<!-- jQuery library and plugins -->
				<file name="jquery.js" />
				<!-- jQuery UI library -->
				<file name="jquery.ui.js" />
			</filelist>
			<filelist dir="${src.js}">
				<!-- infos (as comments) -->
				<file name="mmhk.ext.info.txt" />
				<!-- internationalization -->
				<file name="mmhk.ext.locale.js" />
				<file name="mmhk.ext.locale.en.js" />
				<file name="mmhk.ext.locale.fr.js" />
				<!-- base -->
				<file name="mmhk.ext.units.js" />
				<file name="mmhk.ext.base.js" />
			</filelist>
		</concat>

		<!-- concat corresponding files for each module -->
		<foreach target="module-inject" param="dir">
			<path>
				<dirset dir="${src.modules}" includes="*" />
			</path>
			<param name="target" value="${build}/${build.mmhk.inject}" />
		</foreach>

		<!-- close script -->
		<concat destfile="${build}/${build.mmhk.inject}" append="true">
			<filelist dir="${src.js}">
				<!-- outro -->
				<file name="mmhk.ext.inject.outro.js" />
			</filelist>
		</concat>

		<!-- prepare the file for redistribution -->
		<prepare target="${build}/${build.mmhk.inject}" type="js" />
	</target>

	<macrodef name="assemble-modules-scripts">
		<attribute name="type" />
		<attribute name="target" />
		<sequential>
			<mkdir dir="${build}" />

			<!-- start with opening, libs and base scripts -->
			<concat destfile="${build}/${build.mmhk.@{type}}">
				<filelist dir="${src.js}">
					<!-- intro -->
					<file name="mmhk.ext.@{type}.intro.js" />
				</filelist>
				<!-- add the dedicated implem -->
				<filelist dir="src/@{target}/impl">
					<file name="@{type}.js" />
				</filelist>
				<filelist dir="${src.js}">
					<!-- base -->
					<file name="mmhk.ext.@{type}.base.js" />
				</filelist>
			</concat>

			<!-- concat corresponding files for each module -->
			<foreach target="module-script" param="dir">
				<path>
					<dirset dir="${src.modules}" includes="*" />
				</path>
				<param name="type" value="@{type}" />
				<param name="target" value="${build}/${build.mmhk.@{type}}" />
			</foreach>

			<!-- close script -->
			<concat destfile="${build}/${build.mmhk.@{type}}" append="true">
				<filelist dir="${src.js}">
					<!-- outro -->
					<file name="mmhk.ext.@{type}.outro.js" />
				</filelist>
			</concat>

			<!-- prepare the file for redistribution -->
			<prepare target="${build}/${build.mmhk.@{type}}" type="js" />
		</sequential>
	</macrodef>

	<!-- MMHK content scripts -->
	<target name="mmhk-content-chrome">
		<assemble-modules-scripts type="content" target="chrome" />
	</target>
	<target name="mmhk-content-firefox">
		<assemble-modules-scripts type="content" target="firefox" />
	</target>

	<!-- MMHK background scripts -->
	<target name="mmhk-background-chrome">
		<assemble-modules-scripts type="background" target="chrome" />
	</target>
	<target name="mmhk-background-firefox">
		<assemble-modules-scripts type="background" target="firefox" />

		<!-- prepend the options object to the background script -->
		<copy file="${src.firefox}/chrome/content/options.js" tofile="${build}/options-tmp.js" />
		<move file="${build}/${build.mmhk.background}" tofile="${build}/background-tmp.js" />
		<prepare target="${build}/options-tmp.js" type="js" />
		<concat destfile="${build}/${build.mmhk.background}">
			<filelist dir="${build}">
				<file name="${build}/options-tmp.js" />
				<file name="${build}/background-tmp.js" />
			</filelist>
		</concat>
		<delete file="${build}/options-tmp.js" />
		<delete file="${build}/background-tmp.js" />
	</target>

	<!-- MMHK custom CSS -->
	<target name="mmhk-css" depends="jQuery-UI">
		<mkdir dir="${build}" />

		<!-- global CSS -->
		<concat destfile="${build}/${build.mmhk.css}">
			<filelist dir="${src.css}">
				<file name="mmhk.ext.cluetip.css" />
				<file name="mmhk.ext.css" />
			</filelist>
		</concat>

		<!-- concat corresponding files for each module -->
		<foreach target="module-css" param="dir">
			<path>
				<dirset dir="${src.modules}" includes="*" />
			</path>
			<param name="target" value="${build}/${build.mmhk.css}" />
		</foreach>

		<!-- prepare the file for redistribution -->
		<prepare target="${build}/${build.mmhk.css}" type="css" />
	</target>

	<target name="mmhk-extra-files">
		<mkdir dir="${build.extra}" />
		<foreach target="module-extra-files" param="dir">
			<path>
				<dirset dir="${src.modules}" includes="*" />
			</path>
			<param name="target" value="${build.extra}" />
		</foreach>
	</target>

	<target name="module-extra-files">
		<basename property="base" file="${dir}" />
		<mkdir dir="${target}/${base}" />
		<copy todir="${target}/${base}">
			<fileset dir="${dir}">
				<exclude name="*.js" />
				<exclude name="*.css" />
			</fileset>
		</copy>
	</target>

	<!-- MMHK options page for chrome -->
	<target name="mmhk-chrome-options" depends="jQuery,jQuery-UI">
		<merge-and-prepare target="${build}/options.js" type="js">
			<filelist dir="${src.chrome}">
				<file name="options.js" />
			</filelist>
		</merge-and-prepare>

		<merge-and-prepare target="${build}/options.css" type="css">
			<filelist dir="${src.chrome}">
				<file name="options.css" />
			</filelist>
		</merge-and-prepare>
	</target>

</project>
