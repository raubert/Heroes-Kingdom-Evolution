<project name="Heroes Kingdom Evolution" default="all" basedir=".">

	<property name="version" value="1.99" />

	<property name="DEBUG" value="true" />

	<property name="src" location="src" />
	<property name="src.js" location="${src}/js" />
	<property name="src.css" location="${src}/css" />
	<property name="src.img" location="${src}/images" />
	<property name="src.modules" location="${src}/modules" />
	<property name="src.chrome" location="${src}/chrome" />
	<property name="src.userscript" location="${src}/userscript" />

	<property name="build" location="build" />
	<property name="build.lang" value="en,fr" />
	<property name="build.jquery.js" value="jquery.js" />
	<property name="build.jquery.ui.js" value="jquery.ui.js" />
	<property name="build.jquery.ui.css" value="jquery.ui.css" />
	<property name="build.mmhk.inject" value="mmhk.ext.js" />
	<property name="build.mmhk.logic" value="mmhk.ext.logic.js" />
	<property name="build.mmhk.process" value="mmhk.ext.process.js" />
	<property name="build.mmhk.css" value="mmhk.ext.css" />

	<property name="chrome" value="" />

	<!-- ant-contrib required -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" />

	<!-- compresses the specified file when not in DEBUG mode -->
	<macrodef name="compress">
		<attribute name="file" />
		<attribute name="type" />
		<sequential>
			<if>
				<equals arg1="${DEBUG}" arg2="false" />
				<then>
					<java jar="yuicompressor-2.4.2.jar" fork="true">
						<arg value="--type" />
						<arg value="@{type}" />
						<arg value="-o" />
						<arg value="@{file}" />
						<arg value="@{file}" />
					</java>
				</then>
			</if>
		</sequential>
	</macrodef>

	<!-- merges the specified target as a concatenation of the given list of files -->
	<macrodef name="merge-and-prepare">
		<attribute name="target" />
		<attribute name="type" />
		<element name="files" implicit="true" />
		<sequential>
			<concat destfile="@{target}">
				<files />
			</concat>
			<prepare target="@{target}" type="@{type}" />
		</sequential>
	</macrodef>

	<!-- prepares the specified target for production -->
	<macrodef name="prepare">
		<attribute name="target" />
		<attribute name="type" />
		<sequential>
			<compress file="@{target}" type="@{type}" />
			<replaceregexp match="@VERSION" replace="${version}" flags="g" file="@{target}" />
			<tstamp>
				<format property="now" pattern="d-MMMM-yyyy hh:mm aa z" locale="en,US" />
			</tstamp>
			<replaceregexp match="@DATE" replace="Date: ${now}" flags="g" file="@{target}" />
		</sequential>
	</macrodef>

	<macrodef name="append">
		<attribute name="file" />
		<attribute name="to" />
		<sequential>
			<if>
				<available file="@{file}" />
				<then>
					<concat destfile="@{to}" append="yes">
						<filelist dir=".">
							<file name="@{file}" />
						</filelist>
					</concat>
				</then>
			</if>
		</sequential>
	</macrodef>

	<target name="locale">
		<append file="${base}/messages_${lang}.js" to="${target}" />
	</target>

	<target name="module-inject">
		<basename property="base" file="${dir}" />
		<foreach list="${build.lang}" target="locale" param="lang">
			<param name="target" value="${target}" />
			<param name="base" value="${dir}" />
		</foreach>
		<append file="${dir}/${base}.js" to="${target}" />
	</target>

	<target name="module-script">
		<append file="${dir}/${type}.js" to="${target}" />
	</target>

	<target name="module-css">
		<basename property="base" file="${dir}" />
		<append file="${dir}/${base}.css" to="${target}" />
	</target>

	<target name="all" depends="clean,chrome" />

	<target name="clean">
		<delete dir="${build}" />
	</target>

	<target name="chrome" depends="jQuery,jQuery-UI,mmhk-injected,mmhk-logic,mmhk-process,mmhk-css,mmhk-chrome-options">
		<!-- copy chrome files -->
		<copy todir="${build}">
			<fileset dir="${src.chrome}">
				<!-- these files have their own target -->
				<exclude name="options.js" />
				<exclude name="options.css" />
			</fileset>
		</copy>

		<!-- copy images -->
		<copy todir="${build}/images">
			<fileset dir="${src.img}" includes="*.*" />
		</copy>

		<!-- update manifest -->
		<replaceregexp match="@VERSION" replace="${version}" flags="g" file="${build}/manifest.json" />
	</target>

	<!-- jQuery library and plugins -->
	<target name="jQuery">
		<mkdir dir="${build}" />

		<merge-and-prepare target="${build}/${build.jquery.js}" type="js">
			<filelist dir="${src.js}">
				<file name="jquery-1.4.3.js" />
				<file name="jquery.cluetip.js" />
				<file name="jquery.hoverIntent.js" />
			</filelist>
		</merge-and-prepare>
	</target>

	<!-- jQuery UI library, plugins and style -->
	<target name="jQuery-UI">
		<mkdir dir="${build}" />

		<merge-and-prepare target="${build}/${build.jquery.ui.js}" type="js">
			<filelist dir="${src.js}">
				<file name="jquery.ui.core.js" />
				<file name="jquery.ui.widget.js" />
				<file name="jquery.ui.mouse.js" />
				<file name="jquery.ui.position.js" />
				<file name="jquery.ui.draggable.js" />
				<file name="jquery.ui.droppable.js" />
				<file name="jquery.ui.autocomplete.js" />
				<file name="jquery.ui.button.js" />
				<file name="jquery.ui.dialog.js" />
				<file name="jquery.ui.tabs.js" />
				<file name="jquery.ui.progressbar.js" />
			</filelist>
		</merge-and-prepare>

		<merge-and-prepare target="${build}/${build.jquery.ui.css}" type="css">
			<filelist dir="${src.css}">
				<file name="jquery.ui.core.css" />
				<file name="jquery.ui.autocomplete.css" />
				<file name="jquery.ui.button.css" />
				<file name="jquery.ui.dialog.css" />
				<file name="jquery.ui.tabs.css" />
				<file name="jquery.ui.progressbar.css" />
				<file name="jquery.ui.theme.css" />
			</filelist>
		</merge-and-prepare>

		<copy todir="${build}/images">
			<fileset dir="${src.img}/ui" />
		</copy>
	</target>

	<!-- MMHK injected scripts -->
	<target name="mmhk-injected" depends="jQuery,jQuery-UI">
		<mkdir dir="${build}" />

		<!-- start with opening, libs and base scripts -->
		<concat destfile="${build}/${build.mmhk.inject}">
			<filelist dir="${src.js}">
				<!-- intro -->
				<file name="mmhk.ext.inject.intro.js" />
			</filelist>
			<filelist dir="${build}">
				<!-- jQuery library and plugins -->
				<file name="jquery.js" />
				<!-- jQuery UI library -->
				<file name="jquery.ui.js" />
			</filelist>
			<filelist dir="${src.js}">
				<!-- infos (as comments) -->
				<file name="mmhk.ext.info.txt" />
				<!-- internationalization -->
				<file name="mmhk.ext.locale.js" />
				<file name="mmhk.ext.locale.en.js" />
				<file name="mmhk.ext.locale.fr.js" />
				<!-- base -->
				<file name="mmhk.ext.units.js" />
				<file name="mmhk.ext.base.js" />
			</filelist>
		</concat>

		<!-- concat corresponding files for each module -->
		<foreach target="module-inject" param="dir">
			<path>
				<dirset dir="${src.modules}" includes="*" />
			</path>
			<param name="target" value="${build}/${build.mmhk.inject}" />
		</foreach>

		<!-- close script -->
		<concat destfile="${build}/${build.mmhk.inject}" append="true">
			<filelist dir="${src.js}">
				<!-- outro -->
				<file name="mmhk.ext.inject.outro.js" />
			</filelist>
		</concat>

		<!-- prepare the file for redistribution -->
		<prepare target="${build}/${build.mmhk.inject}" type="js" />
	</target>

	<macrodef name="assemble-module-script">
		<attribute name="type" />
		<sequential>
			<mkdir dir="${build}" />

			<!-- start with opening, libs and base scripts -->
			<concat destfile="${build}/${build.mmhk.@{type}}">
				<filelist dir="${src.js}">
					<!-- intro -->
					<file name="mmhk.ext.@{type}.intro.js" />
				</filelist>
			</concat>

			<!-- concat corresponding files for each module -->
			<foreach target="module-script" param="dir">
				<path>
					<dirset dir="${src.modules}" includes="*" />
				</path>
				<param name="type" value="@{type}" />
				<param name="target" value="${build}/${build.mmhk.@{type}}" />
			</foreach>

			<!-- close script -->
			<concat destfile="${build}/${build.mmhk.@{type}}" append="true">
				<filelist dir="${src.js}">
					<!-- outro -->
					<file name="mmhk.ext.@{type}.outro.js" />
				</filelist>
			</concat>

			<!-- prepare the file for redistribution -->
			<prepare target="${build}/${build.mmhk.@{type}}" type="js" />
		</sequential>
	</macrodef>

	<!-- MMHK logic scripts -->
	<target name="mmhk-logic">
		<assemble-module-script type="logic" />
	</target>

	<!-- MMHK processing scripts -->
	<target name="mmhk-process">
		<assemble-module-script type="process" />
	</target>

	<!-- MMHK custom CSS -->
	<target name="mmhk-css" depends="jQuery-UI">
		<mkdir dir="${build}" />

		<!-- global CSS -->
		<concat destfile="${build}/${build.mmhk.css}">
			<filelist dir="${src.css}">
				<file name="mmhk.ext.cluetip.css" />
				<file name="mmhk.ext.css" />
			</filelist>
		</concat>

		<!-- concat corresponding files for each module -->
		<foreach target="module-css" param="dir">
			<path>
				<dirset dir="${src.modules}" includes="*" />
			</path>
			<param name="target" value="${build}/${build.mmhk.css}" />
		</foreach>

		<!-- prepare the file for redistribution -->
		<prepare target="${build}/${build.mmhk.css}" type="js" />
	</target>

	<!-- MMHK options page for chrome -->
	<target name="mmhk-chrome-options" depends="jQuery,jQuery-UI">
		<merge-and-prepare target="${build}/options.js" type="js">
			<filelist dir="${src.chrome}">
				<file name="options.js" />
			</filelist>
		</merge-and-prepare>

		<merge-and-prepare target="${build}/options.css" type="css">
			<filelist dir="${src.chrome}">
				<file name="options.css" />
			</filelist>
		</merge-and-prepare>
	</target>

</project>